# ============================================
# CodeAgent Vulnerability Scanner
# Environment Configuration Template
# ============================================
# Copy this file to .env for development
# Never commit .env to version control!

# ============================================
# BACKEND CONFIGURATION (Python/FastAPI)
# ============================================

# OpenAI API Configuration (REQUIRED for AI features)
OPENAI_API_KEY=your_openai_api_key_here

# AI Model Selection
AI_MODEL=GPT_4  # Options: GPT_4, GPT_3_5_TURBO, GPT_4_32K
ENABLE_AI_ANALYSIS=true
AI_ANALYSIS_MIN_SEVERITY=high
MAX_CONCURRENT_AI_REVIEWS=1
AI_ANALYSIS_TIMEOUT_SEC=300

# GitHub Token (optional, for private repositories)
GITHUB_TOKEN=your_github_token_here

# Storage Configuration
STORAGE_BASE=./storage
MAX_UPLOAD_SIZE=52428800  # 50MB in bytes
MAX_CONCURRENT_JOBS=2

# Server Configuration
HOST=0.0.0.0
PORT=8080
WORKERS=1

# Analyzer Configuration
DEFAULT_TIMEOUT_SEC=600
MAX_FILES_PER_JOB=10000
DEFAULT_ANALYZERS=bandit,semgrep,depcheck

# Logging
LOG_LEVEL=INFO

# Rate Limiting
RATE_LIMIT_PER_MINUTE=60
MAX_JOBS_PER_API_KEY=2

# Data Retention
JOB_RETENTION_DAYS=7
REPORT_RETENTION_DAYS=30

# ============================================
# FRONTEND CONFIGURATION (Next.js)
# ============================================
# Note: Frontend uses codeagent-scanner-ui/.env.local
# These are reference values - configure in frontend directory

# Backend API URL (from frontend perspective)
# NEXT_PUBLIC_API_URL=http://localhost:8080

# Application Settings
# NEXT_PUBLIC_APP_NAME="CodeAgent Vulnerability Scanner"
# NEXT_PUBLIC_APP_VERSION="0.1.0"

# Feature Flags
# NEXT_PUBLIC_ENABLE_AI_FEATURES=true
# NEXT_PUBLIC_ENABLE_WEBHOOKS=true

# ============================================
# DOCKER CONFIGURATION
# ============================================

# Port Configuration
# Backend Docker Mapping: -p HOST_PORT:CONTAINER_PORT
# Example: docker run -p 8000:8080 means:
#   - Host (your machine): port 8000
#   - Container (inside Docker): port 8080
#   - Frontend calls: http://localhost:8000

HOST_PORT=8000             # Port on your machine (what frontend calls)
BACKEND_PORT=8080          # Port inside Docker container
FRONTEND_PORT=3000         # Frontend port (both host and container)

# Network Configuration
COMPOSE_PROJECT_NAME=codeagent-scanner

